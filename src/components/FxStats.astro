---
import { Icon } from "astro-icon/components";
import { Badge } from "./ui/react/badge";
import { getStatsData } from "@/utilities/helpers/getStatsData";
import { formatTime } from "@/utilities/helpers/time-formatter";

const { fxData } = await getStatsData();
const { data, bids } = fxData;
//sort by amount in desc order
const sortedFxData = data?.sort((a, b) => b.amount - a.amount);

const activeBid = data?.filter((bid) => bid.status === "open")?.length;
const totalTenders = data?.length;

---

<div class="flex flex-col gap-x-4 ml-20 w-[calc(100%-5rem)] px-4 mt-24 mb-8">
  <div>
    <h1 class="font-semibold text-2xl text-foreground my-8">Dashboard</h1>
  </div>

  <div class="flex gap-x-6">
    <div class="w-1/4 bg-slate-100 dark:bg-natural rounded-lg p-4 shadow-md">
      <h2 class="font-semibold text-foreground text-lg mb-2">
        Active Fx Tenders
      </h2>
      <span class="flex justify-between">
        <p class="text-gray-500 dark:text-gray-300 text-4xl font-bold">
          {activeBid}
        </p>
        <Icon
          name="majesticons:analytics"
          size={40}
          class="bg-white dark:bg-slate-300 text-primary p-2 rounded-full"
        />
      </span>
    </div>
    <div
      class="w-1/4 bg-slate-100 dark:bg-natural font-semibold text-foreground rounded-lg p-4 shadow-md"
    >
      <h2 class="font-semibold text-lg mb-2">Fx Tenders</h2>
      <span class="flex justify-between">
        <p class="text-gray-500 dark:text-gray-300 text-4xl font-bold">
          {totalTenders}
        </p>
        <Icon
          name="majesticons:analytics-line"
          size={40}
          class="bg-white dark:bg-slate-300 text-primary p-2 rounded-full"
        />
      </span>
    </div>
    <div
      class="w-1/4 bg-slate-100 dark:bg-natural font-semibold text-foreground rounded-lg p-4 shadow-md"
    >
      <!-- <h2 class="font-semibold text-lg mb-2">Documents submitted</h2>
      <span class="flex justify-between">
        <p class="text-gray-500 dark:text-gray-300 text-4xl font-bold">0</p>
        <Icon
          name="majesticons:analytics-plus-line"
          size={40}
          class="bg-white dark:bg-slate-300 text-primary p-2 rounded-full"
        />
      </span> -->
    </div>
    <div
      class="w-1/4 bg-slate-100 dark:bg-natural font-semibold text-foreground rounded-lg p-4 shadow-md"
    >
      <!-- <h2 class="font-semibold text-lg mb-2">Won/Lost</h2>
      <span class="flex justify-between">
        <p class="text-gray-500 dark:text-gray-300 text-4xl font-bold">0</p>
        <Icon
          name="majesticons:analytics-restricted-line"
          size={43}
          class="bg-white dark:bg-slate-300 text-primary p-2 rounded-full"
        /> -->
      </span>
    </div>
  </div>

  <div class="flex flex-col mt-12">
    <h3 class="text-xl font-medium my-4 text-foreground">Top fx bids</h3>
    <table
      class="w-full border-collapse border border-gray-200 dark:border-gray-700 text-foreground"
    >
      <thead>
        <tr class="bg-primary text-white text-left">
          <th class="py-4 px-4 font-semibold">Title</th>
          <th class="py-4 px-4 font-semibold">Amount</th>
          <th class="py-4 px-4 font-semibold">Start Time</th>
          <th class="py-4 px-4 font-semibold">End Time</th>
          <th class="py-4 px-4 font-semibold">Status</th>
        </tr>
      </thead>
      <tbody>
        {
          sortedFxData.slice(0, 5).map((item) => (
            <tr class="border-t border-gray-200 dark:border-gray-700">
              <td class="py-4 px-4">{item?.title}</td>
              <td class="py-4 px-4">
                {item?.currency.toUpperCase()}
                {item?.amount}
              </td>
              <td class="py-4 px-4">{formatTime(item?.startTime)}</td>
              <td class="py-4 px-4">{formatTime(item?.endTime)}</td>
              <td class="py-4 px-4">
                {item?.status === "pending" ? (
                  <Badge className="bg-gray-500 hover:bg-gray-500 px-4 text-[10px] text-slate-200">
                    {item?.status}
                  </Badge>
                ) : item?.status === "sent" ? (
                  <Badge className="bg-primary hover:bg-primary px-4 text-[10px] text-slate-200">
                    {item?.status}
                  </Badge>
                ) : item?.status === "closed" ? (
                  <Badge className="bg-red-600 hover:bg-red-600 px-4 text-[10px] text-slate-200">
                    {item?.status}
                  </Badge>
                ) : item?.status === "open" ? (
                  <Badge className="bg-green-600 hover:bg-green-600 px-4 text-[10px] text-slate-200">
                    {item?.status}
                  </Badge>
                ) : (
                  <Badge className="bg-gray-500 hover:bg-gray-500 px-4 text-[10px] text-slate-200">
                    {item?.status}
                  </Badge>
                )}
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</div>
